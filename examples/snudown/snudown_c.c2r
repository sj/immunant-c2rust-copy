# Cross-check configuration file for the C version of snudown
---
# System headers
/usr/include/python2.7/object.h:
    - item: struct
      name: PyMemberDef
      custom_hash: "xcheck_hash_PyMemberDef"

/usr/include/python3.6m/unicodeobject.h:
    - item: defaults
      disable_xchecks: true

# Ubuntu builds with _FORTIFY_SOURCE, which includes this
/usr/include/x86_64-linux-gnu/bits/stdio2.h:
    - item: defaults
      disable_xchecks: true

# Our own custom cross-checks
../xchecks.c:
    - item: defaults
      disable_xchecks: true

# snudown files
snudown.c:
    - item: defaults
      disable_xchecks: true
      #all_args: default

# html/*.c
html/html.c:
    - item: defaults
      disable_xchecks: true

html/houdini_href_e.c:
    - item: defaults
      disable_xchecks: true

html/houdini_html_e.c:
    - item: defaults
      disable_xchecks: true

html/html_smartypants.c:
    - item: defaults
      disable_xchecks: true

# Translated snudown files
src/autolink.c:
    - item: defaults
      all_args: default

src/buffer.c:
    - item: defaults
      all_args: default

src/bufprintf.c:
    - item: function
      name: bufprintf
      disable_xchecks: true

src/buffer.h:
    - item: struct
      name: buf
      #custom_hash: "xcheck_hash_struct_buf"
      fields:
        data: disabled # FIXME: hash up to buf.size bytes

html_entities.gperf:
    - item: defaults
      all_args: default

src/markdown.c:
    - item: defaults
      all_args: default

    - item: struct
      name: sd_markdown
      fields:
        # sd_markdown_new doesn't initialize refs
        refs: disabled
        # Fields which the Rust version doesn't hash
        # FIXME: hash these fields
        cb: disabled
        active_char: disabled
        work_bufs: disabled

src/stack.c:
    - item: defaults
      all_args: default

    - item: function
      name: stack_init
      args:
        # Segfault on xcheck(st), for some reason
        st: disabled
...
